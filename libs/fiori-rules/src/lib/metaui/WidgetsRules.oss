
/**
 * @license
 * Copyright 2017 SAP Ariba
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Based on original work: MetaUI: Craig Federighi (2008)
 *
 */


field {
    type  {
       component:StringModule;
        bindings:{
          value:$value;
          id: ${properties.get("field")};
        };
    }

    type=(String, string) {
        editable  {
            component:PlatformInputModule;
            bindings:{
               id:${ properties.get("field")};
               name:${ properties.get("field")};
               ngModel: $value;
               readonly:${ properties.get("readonly")};
               type:'text';
            };
        }

    }

    component=(StringModule,LinkComponent, PlatformInputModule) {
        @trait=bold {
            wrapperComponent:GenericContainerComponent;
            wrapperBindings: { tagName:b; };
        }
        @trait=italic {
            wrapperComponent:GenericContainerComponent;
            wrapperBindings: { tagName:i; };
        }
        @trait=heading1 {
            wrapperComponent:GenericContainerComponent;
            wrapperBindings: { tagName:h1; };
        }
        @trait=heading2 {
            wrapperComponent:GenericContainerComponent;
            wrapperBindings: { tagName:h2; };
        }
        @trait=heading3 {
            wrapperComponent:GenericContainerComponent;
            wrapperBindings: { tagName:h3; };
        }
    }
}

class {
    @trait=fourZones {
        zones: [zOne, zTwo, zThree, zFour, zDetail, zFieldGroup];
        fourZoneLayout:true;
    }

    @trait=oneZone {
       zones: [zOne, zDetail];
    }

    operation=(create,edit,view,search) {
        trait: fourZones;
    }

}

@traitGroup=FormZones {
    @trait=fourZones;
    @trait=oneZone;
}


layout {
    @trait=Form {
      visible:true;
      component:MetaFormModule;
      bindings:{
        columnLayout:${properties.get("layoutPattern")};
        mainTitle:${properties.get("mainTitle")};
      };
    }

    component=MetaFormGroup {
      @trait=noLabelLayout;
    }

    @trait=DynamicPage {
      visible:true;
      component:MetaDynamicPageModule ;
      bindings:{
        size:${properties.get("size") || "large" };
        background:${properties.get("background") || "solid"};
      };
    }

    @trait=Stack {
      visible:true;
      component:MetaElementListModule;
    }

     @trait=Bredcrumb {
        visible:true;
        component:MetaBreadcrumbModule;
     }

     @trait=ToolbarActions {
        visible:true;
        component:MetaToolbarActionsModule;
        bindings: {
          showSeparator:${properties.get("showSeparator")};
        };
     }

     @trait=BarActions {
        visible:true;
        component:MetaBarActionsModule;
     }

    layout_trait=noLabelLayout class {
      bindings:{
        noLabelLayout:true;
      };
    }
}

@traitGroup=LayoutGrouping {
    @trait=Form;
    @trait=DynamicPage;
    @trait=Stack;
    @trait=Bredcrumb;
    @trait=ToolbarActions;
    @trait=BarActions;
}

~class layout=(Inspect, SearchForm) {component:StringModule; bindings:{value:null; }; }

layout=(PageGlobalActions, PageLayoutActions) {
  trait:ToolbarActions;
}

layout=(PageFooterActions) {
  trait:BarActions;
}

layout=DynamicPageWithActions {
  trait:DynamicPage;

  @layout=PageTitle {
      visible:true;
      title:${ FieldPath.getFieldValue(object, meta.displayLabel(values.get("class"))) };
      subTitle:${propertie.get('subTitle')};
      after:zTitle;

      @layout=Navigation#Bredcrumb {
        navItems: ["Men", "Shoes", "Running Shoes", "Jogging"];
      }

      @layout=KeyInfo {
        component:MetaObjectMarkerModule;
        bindings:{
          value:'LAST DAY OF SALE';
         };
      }
      layout=PageGlobalActions {}

      layout=PageGlobalActions {}

  }

  @layout=PageHeader#Form { after:zHeader; zonePath:Header; }

  @layout=PageContent#Form { after:zContent; zonePath:Content; }

  @layout=PageFooterActions  {visible:true; disabled:true; after:zFooter; }
}

layout=PageGlobalActions {
    showSeparator: true;

    @actionCategory=GlobalPageActions {
        after:zMain;

        @action=accept {
            trait:controllerAction;
            visible:true;
            type:'positive';
        }

        @action=reject {
            trait:controllerAction;
            visible:true;
            type:'negative';
        }
    }
}

layout=PageLayoutActions {
      showSeparator: false;

      @actionCategory=LayoutPageActions {
          after:zMain;

          @action=resize {
              visible:true;
              trait:controllerAction;
              type:"transparent";
              label:"";
              title:"Resize";
              sapIcon:"sap-icon--resize";
          }

          @action=exit {
              visible:true;
              trait:controllerAction;
              label:"";
              title:"Exit";
              type:"transparent";
              sapIcon:"sap-icon--exitfullscreen";
          }

          @action=close {
              visible:true;
              trait:controllerAction;
              label:"";
              title:"Close";
              type:"transparent";
              sapIcon:"sap-icon--decline";
          }
      }
}
@actionCategory=FooterPageActions {
      layout=PageFooterActions {
          after:zMain;

          @action=save {
              visible:true;
              trait:controllerAction;
              type:"emphasized";
          }

          @action=exit {
              visible:true;
              type:"transparent";
              trait:controllerAction;
          }
      }
}


