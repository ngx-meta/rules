/**
 *  This is generated file. Do not edit !!
 *
 *  @formatter:off
 *
 */
/* tslint:disable */
export const WidgetsRulesRule = 'ɵ/**ɵ * @licenseɵ * Copyright 2017 SAP Aribaɵ *ɵ * Licensed under the Apache License, Version 2.0 (the "License");ɵ * you may not use this file except in compliance with the License.ɵ * You may obtain a copy of the License atɵ *ɵ * http://www.apache.org/licenses/LICENSE-2.0ɵ *ɵ * Unless required by applicable law or agreed to in writing, softwareɵ * distributed under the License is distributed on an "AS IS" BASIS,ɵ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.ɵ * See the License for the specific language governing permissions andɵ * limitations under the License.ɵ *ɵ * Based on original work: MetaUI: Craig Federighi (2008)ɵ *ɵ */ɵɵfield {ɵ    type  {ɵ       component:StringField;ɵ        bindings:{ɵ          value:$value;ɵ        };ɵ    }ɵɵ    type=(boolean, Boolean) {ɵ        editable {ɵ            component:Checkbox;ɵ            bindings:{ɵ              ngModel: $value;ɵ              required:${properties.get("required")};ɵ              disabled:false;ɵ              label:${properties.get("label")};ɵ              valueLabel:"Yes/No";ɵ              labelPosition:${properties.get("labelPosition")};ɵ            };ɵ        }ɵɵ        editable=false {ɵ           bindings:{ɵ              value: ${value ? "Yes" : "No"};ɵ           };ɵ        }ɵ    }ɵɵ    type=(Number) {ɵ        editable {ɵ          component:InputField;ɵ          canSetType:true;ɵ          bindings:{ɵ             ngModel: $value;ɵ             readonly:false;ɵ             required:${properties.get("required")};ɵ          };ɵ        }ɵ        operation=search { bindings:{formatter:$formatters.blankNull.integer;}; }ɵ    }ɵɵ    type=Date   {ɵ        editable {ɵ          component:DatePicker;ɵ            bindings:{ɵ              ngModel:$value;ɵ              readonly:false;ɵ              disabled:false;ɵ              id: ${properties.get("field")};ɵ              inputDisabled: false;ɵ              editable:true;ɵ          };ɵ        }ɵɵ        editable=false {ɵ            component:DatePicker;ɵ              bindings:{ɵ                value:$value;ɵ                readonly:true;ɵ                disabled:false;ɵ                id: ${properties.get("field")};ɵ                inputDisabled: true;ɵ                editable:false;ɵ            };ɵ         }ɵ        fiveZoneLayout = true {}ɵ    }ɵɵ    type=(Array, Set) {ɵ        editable {ɵ           trait:asSelect;ɵ           bindings:{ɵ              multiple:true;ɵ           };ɵ        }ɵ    }ɵɵ    type=String {ɵ        editable  {ɵ            component:InputField;ɵ            bindings:{ɵ               ngModel: $value;ɵ               id: ${properties.get("field")};ɵ               placeholder:${properties.get("placeholder")};ɵ               required:${properties.get("required")};ɵ               readonly: ${ properties.get("editing") && !properties.get("editable") };ɵ            };ɵ        }ɵ        @trait=longtext {ɵ            after:zBottom;ɵ            component:TextArea;ɵ            bindings:{ɵ              required:${properties.get("required")};ɵ              readonly: ${ properties.get("editing") && !properties.get("editable") };ɵ              autoSizeEnabled:true;ɵ              minRows: 4;ɵ            };ɵɵ            operation=(search, list)  { visible:false; }ɵ        }ɵɵ        @trait=secret {ɵ            bindings:{formatter:$formatters.hiddenPassword;};ɵ            editable   { component:AWPasswordField; bindings:{formatter:null;}; }ɵ            operation=(search, list) { visible: false; }ɵ        }ɵ        trait=truncated { component:TruncateString; bindings:{size:10;}; }ɵ    }ɵɵ    type="Money" {ɵ        component: CurrencyComponent;ɵ        bindings:{ɵ            money:$value;ɵ            currencies:${properties.get("currencies")};ɵ        };ɵ    }ɵɵ    @trait=derived {ɵ        editable:false;ɵ        hideUnderline:true;ɵ        noLabelLayout:true;ɵ        editing { after:zNone; }ɵ    }ɵɵ    @trait=searchable {ɵ        operation=search {ɵ            visible:true; editable:true!; after:null!;ɵ        }ɵ    }ɵɵ    @trait=fluid {ɵ        fluid:true;ɵ    }ɵɵ    @trait=noLabelLayout {ɵ        noLabelLayout:true;ɵ    }ɵɵ    @trait=asSelect {ɵ        editable {ɵ            component:Select;ɵ            bindings:{ɵ                ngModel:$value;ɵ                required:${properties.get("required")};ɵ                displayKey:${ meta.displayLabel(type, properties.get("labelField"), true )};ɵ                list:${properties.get("choices")};ɵ            };ɵ        }ɵ    }ɵɵ    @trait=asRadio {ɵ          editable {ɵ              component:RadioGroup;ɵ              bindings:{ɵ                  ngModel:$value;ɵ                  required:${properties.get("required")};ɵ                  label:${properties.get("label")};ɵ                  displayKey:${ meta.displayLabel(type, properties.get("labelField"), true )};ɵ                  list:${properties.get("choices")};ɵ              };ɵ          }ɵ     }ɵɵ    @trait=asAutoComplete {ɵ         editable {ɵ             component:AutoComplete;ɵ             bindings:{ɵ                 ngModel:$value;ɵ                 required:${properties.get("required")};ɵ                 displayKey:${ meta.displayLabel(type, properties.get("labelField"), true )};ɵ                 list:${properties.get("choices")};ɵ             };ɵ         }ɵ    }ɵɵɵ    @layout=Content {ɵ        component:MetaObjectDetailComponent;ɵ        bindings: {ɵ            object:$value;ɵ            layout:Inspect;ɵ        };ɵ    }ɵɵ    @trait=noCreate { operation=create { visible:false; } }ɵ    @trait=noSearch { operation=search { visible:false; } }ɵɵ    component=GenericChooserComponent {ɵ        @trait=Popup        { bindings:{type:Dropdown; }; }ɵ        @trait=PopupControl { bindings:{type:PopupControl; }; }ɵ        @trait=Chooser      { bindings:{type:Chooser; }; }ɵ    }ɵɵ    component=(StringField,AWHyperlink,PopupMenuLink) {ɵ        @trait=bold {ɵ            wrapperComponent:GenericContainerComponent;ɵ            wrapperBindings: { tagName:b; };ɵ        }ɵ        @trait=italic {ɵ            wrapperComponent:GenericContainerComponent;ɵ            wrapperBindings: { tagName:i; };ɵ        }ɵ        @trait=heading1 {ɵ            wrapperComponent:GenericContainerComponent;ɵ            wrapperBindings: { tagName:h1; };ɵ        }ɵ        @trait=heading2 {ɵ            wrapperComponent:GenericContainerComponent;ɵ            wrapperBindings: { tagName:h2; };ɵ        }ɵ        @trait=heading3 {ɵ            wrapperComponent:GenericContainerComponent;ɵ            wrapperBindings: { tagName:h3; };ɵ        }ɵ    }ɵɵ    floatingLabel:auto;ɵ}ɵɵclass {ɵ   operation=(create,edit,view,search) {ɵ       trait: fiveZones;ɵ   }ɵɵ  @trait=fiveZones {ɵ       zones: [zLeft, zMiddle, zRight, zTop, zBottom, zDetail];ɵ       fiveZoneLayout:true;ɵ   }ɵɵ   @trait=oneZone {ɵ       zones: [zLeft, zDetail];ɵ   }ɵɵ}ɵɵ@traitGroup=FormZones {ɵ    @trait=fiveZones;ɵ    @trait=oneZone;ɵ}ɵɵaction {ɵ  @trait=messageResults {ɵ      actionResults:${ɵ          m = properties.get("mRef");ɵ          m(object);ɵ          matSnackBar.open(properties.get("message"))ɵ      };ɵ  }ɵɵ  @trait=instance {ɵ    enabled:${object != null};ɵ    isInstanceAction:true;ɵ  }ɵ}ɵɵɵlayout {ɵ    @trait=ActionButtons {ɵ        visible:true;ɵ        component:MetaActionListComponent;ɵ    }ɵɵ    @trait=Form { visible:true; component:MetaFormGroup; }ɵɵ    @trait=Stack { visible:true; component:MetaElementListComponent; }ɵɵ    component=MetaForm @trait=labelsOnTop;ɵɵ    layout_trait=labelsOnTop class {ɵ        bindings:{showLabelsOnTop:true; };ɵ    }ɵ}ɵɵ~class layout=(Inspect, SearchForm) {component:StringField; bindings:{value:null; }; }ɵɵɵɵɵlayout=ListItem class {ɵ    component:StringField;ɵ    bindings:{ɵ        value:${properties.get("objectTitle")};ɵ    };ɵ}ɵɵmodule {ɵ    visible:$${!properties.get("hidden")};ɵ    homePage:MetaHomePageComponent;ɵ    pageBindings:${properties.get("homePage") == "MetaHomePageComponent" ? new Map().set("module", values.get("module")) : null};ɵ    component:MetaDashboardLayoutComponent;ɵ    layout { visible:true; }ɵɵ    @trait=ActionTOC {ɵ        @layout=Actions {ɵ           label:"Actions";ɵ           component:"MetaActionListComponent";ɵ           after:zToc;ɵ        }ɵ    }ɵ}ɵ';
/* tslint:disable */
/**
 *  @formatter:on
 *
 */
 